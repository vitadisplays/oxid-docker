server {
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

	# absoluter Pfad zum Web-Root-Verzeichnis
	root <ROOT_DIR>;

	server_name localhost;
	
   ## pagespeed
   include snippets/pagespeed.conf;

   pagespeed EnableFilters prioritize_critical_css;
   pagespeed EnableFilters combine_css;
   pagespeed EnableFilters combine_javascript;
   pagespeed EnableFilters lazyload_images;
   pagespeed LazyloadImagesAfterOnload off;
   #pagespeed EnableFilters defer_javascript;
   pagespeed EnableFilters recompress_jpeg;
   pagespeed EnableFilters recompress_png;
   pagespeed EnableFilters recompress_webp;

   pagespeed Disallow "*/admin/*";
   pagespeed Disallow "*/setup/*";
       	
	# ssl
    ssl_certificate /etc/nginx/ssl/oxid.crt;
    ssl_certificate_key /etc/nginx/ssl/oxid.key;
    
	client_max_body_size 20M; 

	index index.php index.html;

	# status
	location /nginx_status {
		access_log off;
		allow 127.0.0.1;
    		stub_status;
	}

       location = /favicon.ico {
                log_not_found off;
                access_log off;
       }
       location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
       }

       location ~ (/\.|EXCEPTION_LOG\.txt|\.log$|\.tpl$|pkg.rev) {
                deny all;
       }

    location ~ /out/pictures/.*(\.jpg|\.gif|\.png)$ {
		expires 1y; # or use max
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";

        try_files $uri /getimg.php;
    }

	# This block will catch static file requests, such as images, css, js
        # The ?: prefix is a 'non-capturing' mark, meaning we do not require
        # the pattern to be captured into $1 which should help improve performa$
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff|ttf|otf|svg|woff2|eot)$ {
                # Some basic cache-control for static files to be sent to the b$
                expires 1y; # or use max
                add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		add_header Access-Control-Allow-Origin "*";
        }

       location ~ ^/(admin|setup)/?$ {
		try_files $uri/ /$1/index.php?$args;	   
       }

       location ~ /(export|out|tmp|views)/ {
       }

       location / {		
                try_files $uri $uri/ /oxseo.php?$args;
       }

       location = /oxseo.php {
                if ($args ~ "mod_rewrite_module_is=off") {
                       rewrite /oxseo.php /oxseo.php?mod_rewrite_module_is=on? break;
                }
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;
                fastcgi_pass unix:/var/run/php/php<PHP_VERSION>-www.sock;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                #fastcgi_param HTTPS on;
       }

       location ~ \.php$ {
                try_files $uri =404;
                include /etc/nginx/fastcgi_params;	
                fastcgi_pass unix:/var/run/php/php<PHP_VERSION>-www.sock;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                #fastcgi_param HTTPS on;
       }
}